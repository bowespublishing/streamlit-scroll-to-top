{"ast":null,"code":"import{Streamlit,StreamlitComponentBase,withStreamlitConnection}from\"streamlit-component-lib\";import React from\"react\";import{PDFDocument}from\"pdf-lib\";import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";class PDFComponent extends StreamlitComponentBase{constructor(props){super(props);this.lastProcessedImageList=void 0;this.lastProcessedSingleImage=void 0;this.render=()=>{const imageData=this.props.args[\"imageData\"];// For single image\nconst fileName=this.props.args[\"fileName\"]||\"output.pdf\";// Single image file name\nconst imageList=this.props.args[\"imageList\"];const dpi=this.props.args[\"dpi\"]||300;const pageSize=this.props.args[\"pageSize\"]||{width:8.5,height:11};const bleed=this.props.args[\"bleed\"]||false;// Single image handling\nif(imageData&&!this.state.isProcessing){if(imageData!==this.lastProcessedSingleImage){this.setState({isProcessing:true,progress:0});this.lastProcessedSingleImage=imageData;this.convertSingleImageToPdf(imageData,fileName,dpi,pageSize,bleed);}}// Multi-image handling\nelse if(imageList&&imageList.length>0&&!this.state.isProcessing){const serializedImageList=JSON.stringify(imageList);// Serialize to detect changes\nif(serializedImageList!==this.lastProcessedImageList){this.setState({isProcessing:true,progress:0});this.lastProcessedImageList=serializedImageList;this.convertImagesToSinglePdf(imageList,dpi,pageSize,bleed);}}return/*#__PURE__*/_jsx(\"div\",{children:this.state.isProcessing&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Processing: \",this.state.progress,\"%\"]}),/*#__PURE__*/_jsx(\"progress\",{value:this.state.progress,max:\"100\"})]})});};this.convertSingleImageToPdf=async(imageData,fileName,dpi,pageSize,bleed)=>{try{const pdfDoc=await PDFDocument.create();this.setState({progress:25});await this.addImageToPdf(pdfDoc,imageData,dpi,pageSize,bleed);this.setState({progress:50});const pdfBytes=await pdfDoc.save();this.setState({progress:75});this.triggerDownload(pdfBytes,fileName);this.setState({progress:100});Streamlit.setComponentValue(true);// Indicate success\n}catch(error){console.error(\"Error generating single PDF:\",error);Streamlit.setComponentValue(false);// Indicate failure\n}finally{this.setState({isProcessing:false});// Reset processing state\n}};this.convertImagesToSinglePdf=async(imageList,dpi,pageSize,bleed)=>{try{const pdfDoc=await PDFDocument.create();const totalImages=imageList.length;let processedImages=0;// Add all images to the PDF\nfor(const{imageData}of imageList){await this.addImageToPdf(pdfDoc,imageData,dpi,pageSize,bleed);processedImages+=1;const progress=Math.round(processedImages/totalImages*100);this.setState({progress});}const pdfBytes=await pdfDoc.save();const fileName=this.props.args[\"outputFileName\"]||\"bulk_images.pdf\";// Trigger the download\nthis.triggerDownload(pdfBytes,fileName);Streamlit.setComponentValue(true);// Indicate success\n}catch(error){console.error(\"Error generating bulk PDF:\",error);Streamlit.setComponentValue(false);// Indicate failure\n}finally{this.setState({isProcessing:false});// Reset processing state\n}};this.addImageToPdf=async(pdfDoc,imageData,dpi,pageSize,bleed)=>{const imageBytes=Uint8Array.from(atob(imageData),c=>c.charCodeAt(0));const embeddedImage=await pdfDoc.embedPng(imageBytes);const pageWidthInPoints=pageSize.width*72;const pageHeightInPoints=pageSize.height*72;let scale,scaledWidth,scaledHeight,xOffset,yOffset;if(bleed){const widthRatio=pageWidthInPoints/embeddedImage.width;const heightRatio=pageHeightInPoints/embeddedImage.height;scale=Math.max(widthRatio,heightRatio);scaledWidth=embeddedImage.width*scale;scaledHeight=embeddedImage.height*scale;xOffset=(pageWidthInPoints-scaledWidth)/2;yOffset=(pageHeightInPoints-scaledHeight)/2;}else{const margin=0.75*72;const contentWidth=pageWidthInPoints-2*margin;const contentHeight=pageHeightInPoints-2*margin;const widthRatio=contentWidth/embeddedImage.width;const heightRatio=contentHeight/embeddedImage.height;scale=Math.min(widthRatio,heightRatio);scaledWidth=embeddedImage.width*scale;scaledHeight=embeddedImage.height*scale;xOffset=(contentWidth-scaledWidth)/2+margin;yOffset=(contentHeight-scaledHeight)/2+margin;}const page=pdfDoc.addPage([pageWidthInPoints,pageHeightInPoints]);page.drawImage(embeddedImage,{x:xOffset,y:yOffset,width:scaledWidth,height:scaledHeight});};this.triggerDownload=(pdfBytes,fileName)=>{const blob=new Blob([pdfBytes],{type:\"application/pdf\"});const url=URL.createObjectURL(blob);const link=document.createElement(\"a\");link.href=url;link.download=fileName;document.body.appendChild(link);link.click();document.body.removeChild(link);};this.state={isProcessing:false,progress:0};this.lastProcessedImageList=null;this.lastProcessedSingleImage=null;}}export default withStreamlitConnection(PDFComponent);","map":{"version":3,"names":["Streamlit","StreamlitComponentBase","withStreamlitConnection","React","PDFDocument","jsxs","_jsxs","jsx","_jsx","PDFComponent","constructor","props","lastProcessedImageList","lastProcessedSingleImage","render","imageData","args","fileName","imageList","dpi","pageSize","width","height","bleed","state","isProcessing","setState","progress","convertSingleImageToPdf","length","serializedImageList","JSON","stringify","convertImagesToSinglePdf","children","value","max","pdfDoc","create","addImageToPdf","pdfBytes","save","triggerDownload","setComponentValue","error","console","totalImages","processedImages","Math","round","imageBytes","Uint8Array","from","atob","c","charCodeAt","embeddedImage","embedPng","pageWidthInPoints","pageHeightInPoints","scale","scaledWidth","scaledHeight","xOffset","yOffset","widthRatio","heightRatio","margin","contentWidth","contentHeight","min","page","addPage","drawImage","x","y","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild"],"sources":["C:/Users/lukeb/Downloads/my_component/pdf_component/frontend/src/MyComponent.tsx"],"sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React, { ReactNode } from \"react\";\nimport { PDFDocument } from \"pdf-lib\";\n\nclass PDFComponent extends StreamlitComponentBase {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isProcessing: false,\n      progress: 0,\n    };\n    this.lastProcessedImageList = null;\n    this.lastProcessedSingleImage = null;\n  }\n\n  private lastProcessedImageList: string | null;\n  private lastProcessedSingleImage: string | null;\n\n  public render = (): ReactNode => {\n    const imageData = this.props.args[\"imageData\"] as string; // For single image\n    const fileName = this.props.args[\"fileName\"] || \"output.pdf\"; // Single image file name\n    const imageList = this.props.args[\"imageList\"] as Array<{ imageData: string; fileName: string }>;\n    const dpi = this.props.args[\"dpi\"] || 300;\n    const pageSize = this.props.args[\"pageSize\"] || { width: 8.5, height: 11 };\n    const bleed = this.props.args[\"bleed\"] || false;\n\n    // Single image handling\n    if (imageData && !this.state.isProcessing) {\n      if (imageData !== this.lastProcessedSingleImage) {\n        this.setState({ isProcessing: true, progress: 0 });\n        this.lastProcessedSingleImage = imageData;\n        this.convertSingleImageToPdf(imageData, fileName, dpi, pageSize, bleed);\n      }\n    }\n    // Multi-image handling\n    else if (imageList && imageList.length > 0 && !this.state.isProcessing) {\n      const serializedImageList = JSON.stringify(imageList); // Serialize to detect changes\n      if (serializedImageList !== this.lastProcessedImageList) {\n        this.setState({ isProcessing: true, progress: 0 });\n        this.lastProcessedImageList = serializedImageList;\n        this.convertImagesToSinglePdf(imageList, dpi, pageSize, bleed);\n      }\n    }\n\n    return (\n      <div>\n        {this.state.isProcessing && (\n          <div>\n            <p>Processing: {this.state.progress}%</p>\n            <progress value={this.state.progress} max=\"100\" />\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  private convertSingleImageToPdf = async (\n    imageData: string,\n    fileName: string,\n    dpi: number,\n    pageSize: { width: number; height: number },\n    bleed: boolean\n  ): Promise<void> => {\n    try {\n      const pdfDoc = await PDFDocument.create();\n      this.setState({ progress: 25 });\n      await this.addImageToPdf(pdfDoc, imageData, dpi, pageSize, bleed);\n      this.setState({ progress: 50 });\n\n      const pdfBytes = await pdfDoc.save();\n      this.setState({ progress: 75 });\n      this.triggerDownload(pdfBytes, fileName);\n      this.setState({ progress: 100 });\n\n      Streamlit.setComponentValue(true); // Indicate success\n    } catch (error) {\n      console.error(\"Error generating single PDF:\", error);\n      Streamlit.setComponentValue(false); // Indicate failure\n    } finally {\n      this.setState({ isProcessing: false }); // Reset processing state\n    }\n  };\n\n  private convertImagesToSinglePdf = async (\n    imageList: Array<{ imageData: string; fileName: string }>,\n    dpi: number,\n    pageSize: { width: number; height: number },\n    bleed: boolean\n  ): Promise<void> => {\n    try {\n      const pdfDoc = await PDFDocument.create();\n\n      const totalImages = imageList.length;\n      let processedImages = 0;\n\n      // Add all images to the PDF\n      for (const { imageData } of imageList) {\n        await this.addImageToPdf(pdfDoc, imageData, dpi, pageSize, bleed);\n        processedImages += 1;\n        const progress = Math.round((processedImages / totalImages) * 100);\n        this.setState({ progress });\n      }\n\n      const pdfBytes = await pdfDoc.save();\n      const fileName = this.props.args[\"outputFileName\"] || \"bulk_images.pdf\";\n\n      // Trigger the download\n      this.triggerDownload(pdfBytes, fileName);\n\n      Streamlit.setComponentValue(true); // Indicate success\n    } catch (error) {\n      console.error(\"Error generating bulk PDF:\", error);\n      Streamlit.setComponentValue(false); // Indicate failure\n    } finally {\n      this.setState({ isProcessing: false }); // Reset processing state\n    }\n  };\n\n  private addImageToPdf = async (\n    pdfDoc: PDFDocument,\n    imageData: string,\n    dpi: number,\n    pageSize: { width: number; height: number },\n    bleed: boolean\n  ): Promise<void> => {\n    const imageBytes = Uint8Array.from(atob(imageData), (c) => c.charCodeAt(0));\n    const embeddedImage = await pdfDoc.embedPng(imageBytes);\n\n    const pageWidthInPoints = pageSize.width * 72;\n    const pageHeightInPoints = pageSize.height * 72;\n\n    let scale, scaledWidth, scaledHeight, xOffset, yOffset;\n\n    if (bleed) {\n      const widthRatio = pageWidthInPoints / embeddedImage.width;\n      const heightRatio = pageHeightInPoints / embeddedImage.height;\n      scale = Math.max(widthRatio, heightRatio);\n      scaledWidth = embeddedImage.width * scale;\n      scaledHeight = embeddedImage.height * scale;\n      xOffset = (pageWidthInPoints - scaledWidth) / 2;\n      yOffset = (pageHeightInPoints - scaledHeight) / 2;\n    } else {\n      const margin = 0.75 * 72;\n      const contentWidth = pageWidthInPoints - 2 * margin;\n      const contentHeight = pageHeightInPoints - 2 * margin;\n\n      const widthRatio = contentWidth / embeddedImage.width;\n      const heightRatio = contentHeight / embeddedImage.height;\n      scale = Math.min(widthRatio, heightRatio);\n      scaledWidth = embeddedImage.width * scale;\n      scaledHeight = embeddedImage.height * scale;\n      xOffset = (contentWidth - scaledWidth) / 2 + margin;\n      yOffset = (contentHeight - scaledHeight) / 2 + margin;\n    }\n\n    const page = pdfDoc.addPage([pageWidthInPoints, pageHeightInPoints]);\n    page.drawImage(embeddedImage, {\n      x: xOffset,\n      y: yOffset,\n      width: scaledWidth,\n      height: scaledHeight,\n    });\n  };\n\n  private triggerDownload = (pdfBytes: Uint8Array, fileName: string): void => {\n    const blob = new Blob([pdfBytes], { type: \"application/pdf\" });\n    const url = URL.createObjectURL(blob);\n\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = fileName;\n    document.body.appendChild(link);\n\n    link.click();\n    document.body.removeChild(link);\n  };\n}\n\nexport default withStreamlitConnection(PDFComponent);\n"],"mappings":"AAAA,OACEA,SAAS,CACTC,sBAAsB,CACtBC,uBAAuB,KAClB,yBAAyB,CAChC,MAAO,CAAAC,KAAK,KAAqB,OAAO,CACxC,OAASC,WAAW,KAAQ,SAAS,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,YAAY,QAAS,CAAAR,sBAAuB,CAChDS,WAAWA,CAACC,KAAU,CAAE,CACtB,KAAK,CAACA,KAAK,CAAC,CAAC,KASPC,sBAAsB,aACtBC,wBAAwB,aAEzBC,MAAM,CAAG,IAAiB,CAC/B,KAAM,CAAAC,SAAS,CAAG,IAAI,CAACJ,KAAK,CAACK,IAAI,CAAC,WAAW,CAAW,CAAE;AAC1D,KAAM,CAAAC,QAAQ,CAAG,IAAI,CAACN,KAAK,CAACK,IAAI,CAAC,UAAU,CAAC,EAAI,YAAY,CAAE;AAC9D,KAAM,CAAAE,SAAS,CAAG,IAAI,CAACP,KAAK,CAACK,IAAI,CAAC,WAAW,CAAmD,CAChG,KAAM,CAAAG,GAAG,CAAG,IAAI,CAACR,KAAK,CAACK,IAAI,CAAC,KAAK,CAAC,EAAI,GAAG,CACzC,KAAM,CAAAI,QAAQ,CAAG,IAAI,CAACT,KAAK,CAACK,IAAI,CAAC,UAAU,CAAC,EAAI,CAAEK,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,EAAG,CAAC,CAC1E,KAAM,CAAAC,KAAK,CAAG,IAAI,CAACZ,KAAK,CAACK,IAAI,CAAC,OAAO,CAAC,EAAI,KAAK,CAE/C;AACA,GAAID,SAAS,EAAI,CAAC,IAAI,CAACS,KAAK,CAACC,YAAY,CAAE,CACzC,GAAIV,SAAS,GAAK,IAAI,CAACF,wBAAwB,CAAE,CAC/C,IAAI,CAACa,QAAQ,CAAC,CAAED,YAAY,CAAE,IAAI,CAAEE,QAAQ,CAAE,CAAE,CAAC,CAAC,CAClD,IAAI,CAACd,wBAAwB,CAAGE,SAAS,CACzC,IAAI,CAACa,uBAAuB,CAACb,SAAS,CAAEE,QAAQ,CAAEE,GAAG,CAAEC,QAAQ,CAAEG,KAAK,CAAC,CACzE,CACF,CACA;AAAA,IACK,IAAIL,SAAS,EAAIA,SAAS,CAACW,MAAM,CAAG,CAAC,EAAI,CAAC,IAAI,CAACL,KAAK,CAACC,YAAY,CAAE,CACtE,KAAM,CAAAK,mBAAmB,CAAGC,IAAI,CAACC,SAAS,CAACd,SAAS,CAAC,CAAE;AACvD,GAAIY,mBAAmB,GAAK,IAAI,CAAClB,sBAAsB,CAAE,CACvD,IAAI,CAACc,QAAQ,CAAC,CAAED,YAAY,CAAE,IAAI,CAAEE,QAAQ,CAAE,CAAE,CAAC,CAAC,CAClD,IAAI,CAACf,sBAAsB,CAAGkB,mBAAmB,CACjD,IAAI,CAACG,wBAAwB,CAACf,SAAS,CAAEC,GAAG,CAAEC,QAAQ,CAAEG,KAAK,CAAC,CAChE,CACF,CAEA,mBACEf,IAAA,QAAA0B,QAAA,CACG,IAAI,CAACV,KAAK,CAACC,YAAY,eACtBnB,KAAA,QAAA4B,QAAA,eACE5B,KAAA,MAAA4B,QAAA,EAAG,cAAY,CAAC,IAAI,CAACV,KAAK,CAACG,QAAQ,CAAC,GAAC,EAAG,CAAC,cACzCnB,IAAA,aAAU2B,KAAK,CAAE,IAAI,CAACX,KAAK,CAACG,QAAS,CAACS,GAAG,CAAC,KAAK,CAAE,CAAC,EAC/C,CACN,CACE,CAAC,CAEV,CAAC,MAEOR,uBAAuB,CAAG,MAChCb,SAAiB,CACjBE,QAAgB,CAChBE,GAAW,CACXC,QAA2C,CAC3CG,KAAc,GACI,CAClB,GAAI,CACF,KAAM,CAAAc,MAAM,CAAG,KAAM,CAAAjC,WAAW,CAACkC,MAAM,CAAC,CAAC,CACzC,IAAI,CAACZ,QAAQ,CAAC,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAC/B,KAAM,KAAI,CAACY,aAAa,CAACF,MAAM,CAAEtB,SAAS,CAAEI,GAAG,CAAEC,QAAQ,CAAEG,KAAK,CAAC,CACjE,IAAI,CAACG,QAAQ,CAAC,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAE/B,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAH,MAAM,CAACI,IAAI,CAAC,CAAC,CACpC,IAAI,CAACf,QAAQ,CAAC,CAAEC,QAAQ,CAAE,EAAG,CAAC,CAAC,CAC/B,IAAI,CAACe,eAAe,CAACF,QAAQ,CAAEvB,QAAQ,CAAC,CACxC,IAAI,CAACS,QAAQ,CAAC,CAAEC,QAAQ,CAAE,GAAI,CAAC,CAAC,CAEhC3B,SAAS,CAAC2C,iBAAiB,CAAC,IAAI,CAAC,CAAE;AACrC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD5C,SAAS,CAAC2C,iBAAiB,CAAC,KAAK,CAAC,CAAE;AACtC,CAAC,OAAS,CACR,IAAI,CAACjB,QAAQ,CAAC,CAAED,YAAY,CAAE,KAAM,CAAC,CAAC,CAAE;AAC1C,CACF,CAAC,MAEOQ,wBAAwB,CAAG,MACjCf,SAAyD,CACzDC,GAAW,CACXC,QAA2C,CAC3CG,KAAc,GACI,CAClB,GAAI,CACF,KAAM,CAAAc,MAAM,CAAG,KAAM,CAAAjC,WAAW,CAACkC,MAAM,CAAC,CAAC,CAEzC,KAAM,CAAAQ,WAAW,CAAG5B,SAAS,CAACW,MAAM,CACpC,GAAI,CAAAkB,eAAe,CAAG,CAAC,CAEvB;AACA,IAAK,KAAM,CAAEhC,SAAU,CAAC,EAAI,CAAAG,SAAS,CAAE,CACrC,KAAM,KAAI,CAACqB,aAAa,CAACF,MAAM,CAAEtB,SAAS,CAAEI,GAAG,CAAEC,QAAQ,CAAEG,KAAK,CAAC,CACjEwB,eAAe,EAAI,CAAC,CACpB,KAAM,CAAApB,QAAQ,CAAGqB,IAAI,CAACC,KAAK,CAAEF,eAAe,CAAGD,WAAW,CAAI,GAAG,CAAC,CAClE,IAAI,CAACpB,QAAQ,CAAC,CAAEC,QAAS,CAAC,CAAC,CAC7B,CAEA,KAAM,CAAAa,QAAQ,CAAG,KAAM,CAAAH,MAAM,CAACI,IAAI,CAAC,CAAC,CACpC,KAAM,CAAAxB,QAAQ,CAAG,IAAI,CAACN,KAAK,CAACK,IAAI,CAAC,gBAAgB,CAAC,EAAI,iBAAiB,CAEvE;AACA,IAAI,CAAC0B,eAAe,CAACF,QAAQ,CAAEvB,QAAQ,CAAC,CAExCjB,SAAS,CAAC2C,iBAAiB,CAAC,IAAI,CAAC,CAAE;AACrC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD5C,SAAS,CAAC2C,iBAAiB,CAAC,KAAK,CAAC,CAAE;AACtC,CAAC,OAAS,CACR,IAAI,CAACjB,QAAQ,CAAC,CAAED,YAAY,CAAE,KAAM,CAAC,CAAC,CAAE;AAC1C,CACF,CAAC,MAEOc,aAAa,CAAG,MACtBF,MAAmB,CACnBtB,SAAiB,CACjBI,GAAW,CACXC,QAA2C,CAC3CG,KAAc,GACI,CAClB,KAAM,CAAA2B,UAAU,CAAGC,UAAU,CAACC,IAAI,CAACC,IAAI,CAACtC,SAAS,CAAC,CAAGuC,CAAC,EAAKA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAAC,CAC3E,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAnB,MAAM,CAACoB,QAAQ,CAACP,UAAU,CAAC,CAEvD,KAAM,CAAAQ,iBAAiB,CAAGtC,QAAQ,CAACC,KAAK,CAAG,EAAE,CAC7C,KAAM,CAAAsC,kBAAkB,CAAGvC,QAAQ,CAACE,MAAM,CAAG,EAAE,CAE/C,GAAI,CAAAsC,KAAK,CAAEC,WAAW,CAAEC,YAAY,CAAEC,OAAO,CAAEC,OAAO,CAEtD,GAAIzC,KAAK,CAAE,CACT,KAAM,CAAA0C,UAAU,CAAGP,iBAAiB,CAAGF,aAAa,CAACnC,KAAK,CAC1D,KAAM,CAAA6C,WAAW,CAAGP,kBAAkB,CAAGH,aAAa,CAAClC,MAAM,CAC7DsC,KAAK,CAAGZ,IAAI,CAACZ,GAAG,CAAC6B,UAAU,CAAEC,WAAW,CAAC,CACzCL,WAAW,CAAGL,aAAa,CAACnC,KAAK,CAAGuC,KAAK,CACzCE,YAAY,CAAGN,aAAa,CAAClC,MAAM,CAAGsC,KAAK,CAC3CG,OAAO,CAAG,CAACL,iBAAiB,CAAGG,WAAW,EAAI,CAAC,CAC/CG,OAAO,CAAG,CAACL,kBAAkB,CAAGG,YAAY,EAAI,CAAC,CACnD,CAAC,IAAM,CACL,KAAM,CAAAK,MAAM,CAAG,IAAI,CAAG,EAAE,CACxB,KAAM,CAAAC,YAAY,CAAGV,iBAAiB,CAAG,CAAC,CAAGS,MAAM,CACnD,KAAM,CAAAE,aAAa,CAAGV,kBAAkB,CAAG,CAAC,CAAGQ,MAAM,CAErD,KAAM,CAAAF,UAAU,CAAGG,YAAY,CAAGZ,aAAa,CAACnC,KAAK,CACrD,KAAM,CAAA6C,WAAW,CAAGG,aAAa,CAAGb,aAAa,CAAClC,MAAM,CACxDsC,KAAK,CAAGZ,IAAI,CAACsB,GAAG,CAACL,UAAU,CAAEC,WAAW,CAAC,CACzCL,WAAW,CAAGL,aAAa,CAACnC,KAAK,CAAGuC,KAAK,CACzCE,YAAY,CAAGN,aAAa,CAAClC,MAAM,CAAGsC,KAAK,CAC3CG,OAAO,CAAG,CAACK,YAAY,CAAGP,WAAW,EAAI,CAAC,CAAGM,MAAM,CACnDH,OAAO,CAAG,CAACK,aAAa,CAAGP,YAAY,EAAI,CAAC,CAAGK,MAAM,CACvD,CAEA,KAAM,CAAAI,IAAI,CAAGlC,MAAM,CAACmC,OAAO,CAAC,CAACd,iBAAiB,CAAEC,kBAAkB,CAAC,CAAC,CACpEY,IAAI,CAACE,SAAS,CAACjB,aAAa,CAAE,CAC5BkB,CAAC,CAAEX,OAAO,CACVY,CAAC,CAAEX,OAAO,CACV3C,KAAK,CAAEwC,WAAW,CAClBvC,MAAM,CAAEwC,YACV,CAAC,CAAC,CACJ,CAAC,MAEOpB,eAAe,CAAG,CAACF,QAAoB,CAAEvB,QAAgB,GAAW,CAC1E,KAAM,CAAA2D,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACrC,QAAQ,CAAC,CAAE,CAAEsC,IAAI,CAAE,iBAAkB,CAAC,CAAC,CAC9D,KAAM,CAAAC,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAErC,KAAM,CAAAM,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGN,GAAG,CACfG,IAAI,CAACI,QAAQ,CAAGrE,QAAQ,CACxBkE,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC,CAE/BA,IAAI,CAACO,KAAK,CAAC,CAAC,CACZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC,CACjC,CAAC,CAxKC,IAAI,CAAC1D,KAAK,CAAG,CACXC,YAAY,CAAE,KAAK,CACnBE,QAAQ,CAAE,CACZ,CAAC,CACD,IAAI,CAACf,sBAAsB,CAAG,IAAI,CAClC,IAAI,CAACC,wBAAwB,CAAG,IAAI,CACtC,CAmKF,CAEA,cAAe,CAAAX,uBAAuB,CAACO,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}